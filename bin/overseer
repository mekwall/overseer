#!/usr/bin/env node

// windows: running "overseer blah" in this folder will invoke WSH, not node.
if (typeof WScript !== "undefined") {
    WScript.echo("overseer does not work when run\n"
                +"with the Windows Scripting Host\n\n"
                +"'cd' to a different directory,\n"
                +"or type 'overseer.cmd <args>',\n"
                +"or type 'node overseer <args>'.");
    WScript.quit(1);
    return
}

process.title = "overseer";

// Module deps
const exec = require('child_process').exec;
const program = require('commander');
const pkg = require('../package.json');
const version = pkg.version;
const os = require('os');
const fs = require('fs');
const path = require('path');

// CLI
program
    .version(version)
    .usage('[options] <file>')
    .option('-w, --watch', 'watch for file system changes')
    .option('-f, --forks <n>', 'amount of workers to fork')
    .option('-e, --env <environment>', 'set environment')
    .option('--pidfile <file>', 'pidfile to use')
    .on('--help', function(){
        console.log('  Examples:');
        console.log('');
        console.log('    $ overseer -w -P 61337 -H localhost -f 4 app.js');
        console.log('');
    })
    .parse(process.argv);

// App file
var appFile = program.args.shift();

// Check if app file was passed
if (!appFile) {
    console.error("Error: Missing file argument. -h for help");
    process.exit(0);
}

// Add .js extension if it's missing
if (path.extname(appFile) === "") {
    appFile += ".js";
}

// Resolve to a real path
appFile = path.resolve(appFile);

// Check if app file exists
if (!fs.existsSync(appFile)) {
    console.error("Error: %s could not be found.", appFile);
    process.exit(0);
}

// Setup overseer and run
require('../src/overseer')(appFile, {
    env: program.env,
    pidfile: program.pidfile,
    watch: program.watch || false
}).run();